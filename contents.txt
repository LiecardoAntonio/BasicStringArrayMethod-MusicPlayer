Basic String & Array Method by building a Music Player website

what i learn:
- Using SVG to create shapes

- Using Web Audio API
  > 1) creating audio element:
    const audio = new Audio();

- Spread operator in JavaScript
  > [...array1]
  > The spread operator (...) allows you to copy all elements from one array into another. It can also be used to concatenate multiple arrays into one without mutating the original array. In the example below, both arr1 and arr2 have been spread into combinedArr:

- Arrow function (anonymous function) in JavaScript
  > () => {}

- Callback function in JavaScript
  > A callback function is a function passed into another function as an argument, which is then invoked inside the outer function to complete some kind of routine or action.
  > e.g .map() function

- array.map()
  > The map() method is used to iterate through an array and return a new array. It's helpful when you want to create a new array based on the values of an existing array.
  > map() method takes a function as an argument. This is called a callback function, which is a function that is passed to another function as an argument. 
  > const numbers = [1, 2, 3];
    const doubledNumbers = numbers.map((number) => number * 2); // doubledNumbers will be [2, 4, 6]
  In the example above, the callback function is (number) => number * 2, and it's run on each element in the numbers array. The map() method then returns a new array with the results.

- aria-label property in HTML5
  > is intended for interactive elements or for elements made interactive via other ARIA declarations when there's no visible text in the DOM to serve as a label. (Learn more about this!!!)

- array.join(separator)
  > The join() method is used to concatenate all the elements of an array into a single string. It takes an optional parameter called a separator which is used to separate each element of the array. For example:
  const exampleArr = ["This", "is", "a", "sentence"];
  const sentence = exampleArr.join(" "); // Separator takes a space character
  console.log(sentence); // Output: "This is a sentence"

- optional chaining array?.attribute
  > Optional chaining (?.) helps prevent errors when accessing nested properties that might be null or undefined. For example:
  const user = {
    name: "Quincy",
    address: {
      city: "San Francisco",
      state: "CA",
      country: "USA",
    },
  };

  // Accessing nested properties without optional chaining
  const state = user.address.state; // CA

  // Accessing a non-existent nested property with optional chaining
  const zipCode = user.address?.zipCode; // Returns undefined instead of throwing an error

- array.sort()
  > The sort() method converts elements of an array into strings and sorts them in place based on their values in the UTF-16 encoding.
  > example:
  const names = ["Tom", "Jessica", "Quincy", "Naomi"];
  names.sort() // ["Jessica", "Naomi", "Quincy", "Tom"]
  > sort has other usage like in the JavaScript code of this folder, check it out!.

- array.find()
  > The find() method retrieves the first element within an array that fulfills the conditions specified in the provided callback function. If no element satisfies the condition, the method returns undefined.

- audio.play()
  > play() is a method from the web audio API for playing an mp3 file.

